pipeline {
    agent {
        docker {
            image 'openjdk:21-jre-alpine'
            args '--user root -v /var/run/docker.sock:/var/run/docker.sock'
        }
    }
    environment {
        //  environment variables
        DOCKER_REGISTRY = "docker.io"
        DOCKER_IMAGE = "dushyanth/spring-mvc-app:${BUILD_NUMBER}"
        SONAR_URL = "http://34.201.116.83:9000"
    }
    stages {
        stage('Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/dushf12/JENKINS-END-TO-END-CICD-PIPELINE.git'
            }
        }

        stage('Build and Test') {
            steps {
                sh 'echo "Building and testing the Spring MVC app"'
                sh 'mvn clean package'
            }
        }

        stage('Static Code Analysis') {
            steps {
                withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
                    sh '''
                        echo "Running static code analysis with SonarQube"
                        mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}
                    '''
                }
            }
        }

        stage('Build and Push Docker Image') {
            steps {
                script {
                    echo "Building Docker image"
                    sh 'docker build -t ${DOCKER_IMAGE} .'
                    docker.withRegistry('https://index.docker.io/v1/', 'docker-cred') {
                        echo "Pushing Docker image to registry"
                        sh "docker push ${DOCKER_IMAGE}"
                    }
                }
            }
        }

        stage('Update Deployment File') {
            steps {
                withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
                    sh '''
                        echo "Updating deployment file with new image tag"
                        git config user.email "your-email@example.com"
                        git config user.name "Your Name"
                        BUILD_NUMBER=${BUILD_NUMBER}
                        sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" path/to/deployment.yml
                        git add path/to/deployment.yml
                        git commit -m "Update deployment image to version ${BUILD_NUMBER}"
                        git push https://${GITHUB_TOKEN}@github.com/dushf12/JENKINS-END-TO-END-CICD-PIPELINE HEAD:main
                    '''
                }
            }
        }
    }
    post {
        success {
            echo 'Pipeline completed successfully.'
        }
        failure {
            echo 'Pipeline failed.'
        }
    }
}
