pipeline {
    agent {
        docker {
            image 'eclipse-temurin:21-jre-alpine' // Alpine-based Java 21 image
            args '--user root -v /var/run/docker.sock:/var/run/docker.sock'
        }
    }

    stages {
        stage('Install Maven') {
            steps {
                echo "Installing Maven on Alpine container"
                sh 'apk add --no-cache maven'
            }
        }

        stage('Checkout') {
            steps {
                echo "Checking out source code from GitHub"
                git branch: 'main', url: 'https://github.com/dushf12/jenkins-end-to-end-cicd-pipeline.git'
            }
        }

        stage('Build and Test') {
            steps {
                echo "Building and testing the Spring MVC application"
                sh 'mvn clean package'
            }
        }

        stage('Static Code Analysis') {
            steps {
                withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
                    echo "Running static code analysis with SonarQube"
                    sh '''
                        mvn sonar:sonar \
                        -Dsonar.login=$SONAR_AUTH_TOKEN \
                        -Dsonar.host.url=http://54.209.212.200:9000
                    '''
                }
            }
        }

        stage('Build and Push Docker Image') {
            steps {
                script {
                    echo "Building Docker image"
                    sh 'docker build -t dushf12/spring-mvc-app:${BUILD_NUMBER} .'

                    echo "Pushing Docker image to Docker Hub"
                    docker.withRegistry('https://index.docker.io/v1/', 'docker-cred') {
                        sh "docker push dushf12/spring-mvc-app:${BUILD_NUMBER}"
                    }
                }
            }
        }

        stage('Update Deployment File') {
            steps {
                withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
                    echo "Updating deployment file with new Docker image tag"
                    sh '''
                        git config user.email "dushf12@gmail.com"
                        git config user.name "dushf12"

                        sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" path/to/deployment.yml
                        git add path/to/deployment.yml
                        git commit -m "Update deployment image to version ${BUILD_NUMBER}"
                        git push https://${GITHUB_TOKEN}@github.com/dushf12/jenkins-end-to-end-cicd-pipeline HEAD:main
                    '''
                }
            }
        }
    }

    post {
        success {
            echo "Pipeline completed successfully."
        }
        failure {
            echo "Pipeline failed."
        }
    }
}
